<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置Mabatis映射文件 -->
<mapper namespace="com.dao.SalaryDAO">
	<resultMap type="salary" id="salaryMap">
		<id property="salaryid" column="salaryid" />
		<result property="deptid" column="deptid" />
		<result property="usersid" column="usersid" />
		<result property="basic" column="basic" />
		<result property="attend" column="attend" />
		<result property="reward" column="reward" />
		<result property="others" column="others" />
		<result property="total" column="total" />
		<result property="yearx" column="yearx" />
		<result property="status" column="status" />
		<result property="memo" column="memo" />
		<result property="deptname" column="deptname" />
		<result property="realname" column="realname" />
	</resultMap>
	<!-- 插入语句 DAO通过id调用此配置 -->
	<insert id="insertSalary" parameterType="salary">  
		insert into salary(salaryid  , deptid  , usersid  , basic  , attend  , reward  , others  , total  , yearx  , status  , memo ) values(#{salaryid}  , #{deptid}   , #{usersid}   , #{basic}   , #{attend}   , #{reward}   , #{others}   , #{total}   , #{yearx}   , #{status}   , #{memo} )
	</insert>
	<!-- 更新语句 DAO通过id调用此配置 -->
		<update id="updateSalary" parameterType="salary">
update salary set  deptid=#{deptid}  , usersid=#{usersid}  , basic=#{basic}  , attend=#{attend}  , reward=#{reward}  , others=#{others}  , total=#{total}  , yearx=#{yearx}  , status=#{status}  , memo=#{memo}  where salaryid=#{salaryid}
	</update>
	<!-- 按主键删除 DAO通过id调用此配置 -->
	<delete id="deleteSalary" parameterType="String">
		delete from salary where salaryid = #{salaryid}
	</delete>
	<!-- 查询全部信息 DAO通过id调用此配置  -->
	<select id="getAllSalary" resultMap="salaryMap">
select a.* , b.deptname , c.realname  from salary a , dept b , users c  where 1=1 and a.deptid = b.deptid and a.usersid = c.usersid  order by salaryid desc
	</select>
	<!-- 按主键查询 DAO通过id调用此配置  -->
	<select id="getSalaryById" parameterType="String" resultMap="salaryMap">
select a.* , b.deptname , c.realname  from salary a , dept b , users c  where 1=1 and a.deptid = b.deptid and a.usersid = c.usersid and salaryid=#{salaryid} order by salaryid desc
	</select>
	<!-- 按条件精确查询 DAO通过id调用此配置  -->
	<select id="getSalaryByCond" parameterType="salary" resultMap="salaryMap">
select a.* , b.deptname , c.realname  from salary a , dept b , users c  where 1=1 and a.deptid = b.deptid and a.usersid = c.usersid 
		<if test="deptid != null and '' != deptid">
			and a.deptid = #{deptid}  
		</if>
		<if test="usersid != null and '' != usersid">
			and a.usersid = #{usersid}  
		</if>
		<if test="basic != null and '' != basic">
			and a.basic = #{basic}  
		</if>
		<if test="attend != null and '' != attend">
			and a.attend = #{attend}  
		</if>
		<if test="reward != null and '' != reward">
			and a.reward = #{reward}  
		</if>
		<if test="others != null and '' != others">
			and a.others = #{others}  
		</if>
		<if test="total != null and '' != total">
			and a.total = #{total}  
		</if>
		<if test="yearx != null and '' != yearx">
			and a.yearx = #{yearx}  
		</if>
		<if test="status != null and '' != status">
			and a.status = #{status}  
		</if>
		<if test="memo != null and '' != memo">
			and a.memo = #{memo}  
		</if>
	</select>
	<!-- 按条件模糊查询 DAO通过id调用此配置  -->
	<select id="getSalaryByLike" parameterType="salary" resultMap="salaryMap">
select a.* , b.deptname , c.realname  from salary a , dept b , users c  where 1=1 and a.deptid = b.deptid and a.usersid = c.usersid 
		<if test="deptid != null and '' != deptid">
			and b.deptname like CONCAT('%', CONCAT(#{deptid}, '%'))
		</if>
		<if test="usersid != null and '' != usersid">
			and c.realname like CONCAT('%', CONCAT(#{usersid}, '%'))
		</if>
		<if test="basic != null and '' != basic">
			and a.basic like CONCAT('%', CONCAT(#{basic}, '%'))
		</if>
		<if test="attend != null and '' != attend">
			and a.attend like CONCAT('%', CONCAT(#{attend}, '%'))
		</if>
		<if test="reward != null and '' != reward">
			and a.reward like CONCAT('%', CONCAT(#{reward}, '%'))
		</if>
		<if test="others != null and '' != others">
			and a.others like CONCAT('%', CONCAT(#{others}, '%'))
		</if>
		<if test="total != null and '' != total">
			and a.total like CONCAT('%', CONCAT(#{total}, '%'))
		</if>
		<if test="yearx != null and '' != yearx">
			and a.yearx like CONCAT('%', CONCAT(#{yearx}, '%'))
		</if>
		<if test="status != null and '' != status">
			and a.status like CONCAT('%', CONCAT(#{status}, '%'))
		</if>
		<if test="memo != null and '' != memo">
			and a.memo like CONCAT('%', CONCAT(#{memo}, '%'))
		</if>
	</select>
</mapper>




























<!--  -->
